---

- name: export Cert from {{ qxl_driver }}
  ansible.windows.win_shell: >
    $cert = (Get-AuthenticodeSignature
    "{{ virtio_win_virtio_path }}\{{ qxl_driver }}\{{ virtio_driver_directory }}\amd64\{{ qxl_driver }}.cat").SignerCertificate;
    [System.IO.File]::WriteAllBytes("{{ ansible_env.TEMP }}\redhat_{{ qxl_driver }}.cer",
    $cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert));

- name: export Cert from balloon
  ansible.windows.win_shell: >
    $cert = (Get-AuthenticodeSignature
    "{{ virtio_win_virtio_path }}\Balloon\{{ virtio_driver_directory }}\amd64\blnsvr.exe").SignerCertificate;
    [System.IO.File]::WriteAllBytes("{{ ansible_env.TEMP }}\redhat_balloon.cer",
    $cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert));

- name: install RH certificates to TrustedPublisher certificate store
  ansible.windows.win_command: 'certutil.exe -f -addstore "TrustedPublisher" {{ ansible_env.TEMP }}\redhat_{{ item }}.cer'
  notify:
    - delete downloaded
  loop:
    - "{{ qxl_driver }}"
    - balloon

- name: export and install viorng cert for 2008 R2 and Windows 7
  block:
    - name: export Cert from viorng
      ansible.windows.win_shell: >
        $cert = (Get-AuthenticodeSignature
        "{{ virtio_win_virtio_path }}\viorng\{{ virtio_driver_directory }}\amd64\viorng.cat").SignerCertificate;
        [System.IO.File]::WriteAllBytes("{{ ansible_env.TEMP }}\redhat_viorng.cer",
        $cert.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert));

    - name: install RH certificates for viorng to TrustedPublisher certificate store
      ansible.windows.win_command: 'certutil.exe -f -addstore "TrustedPublisher" {{ ansible_env.TEMP }}\redhat_viorng.cer'
      notify:
        - delete downloaded
  when: virtio_driver_directory in ['2k8R2', 'w7']
